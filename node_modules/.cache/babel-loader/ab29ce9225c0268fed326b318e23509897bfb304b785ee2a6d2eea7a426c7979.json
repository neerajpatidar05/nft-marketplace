{"ast":null,"code":"var _jsxFileName = \"/home/neeraj/Documents/logistic/NFT_F/src/components/nft/ListonUI.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from 'abi/ERC721Contract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListonUI() {\n  _s();\n  const [listedNFTs, setListedNFTs] = useState([]);\n  useEffect(() => {\n    fetchListedNFTs();\n  }, []);\n  const fetchListedNFTs = async () => {\n    const address = '0xd014b5697fCf686DF723069706c44ca8cC4718Cb';\n    const contractabi = abi.abi;\n    const {\n      ethereum\n    } = window;\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const contractss = new ethers.Contract(address, contractabi, signer);\n    const nftcontractaddress = contractss.address;\n    // Call the getlistedtoken() function of the marketplace contract to get the array of listed NFTs\n    const listedTokens = await marketplaceContract.getListedTokens();\n\n    // Iterate through the listedTokens array and fetch the token URIs\n    const listedNFTsWithURIs = await Promise.all(listedTokens.map(async token => {\n      const tokenURI = await erc721Contract.tokenURI(token.tokenId);\n      return {\n        ...token,\n        tokenURI\n      };\n    }));\n    setListedNFTs(listedNFTsWithURIs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listed NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), listedNFTs.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: nft.tokenURI,\n        alt: `NFT ${nft.tokenId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", nft.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, nft.tokenId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ListonUI, \"f8HLj3Gezol4xy0J/MkvSeLoqPs=\");\n_c = ListonUI;\nexport default ListonUI;\nvar _c;\n$RefreshReg$(_c, \"ListonUI\");","map":{"version":3,"names":["React","useEffect","useState","ethers","abi","jsxDEV","_jsxDEV","ListonUI","_s","listedNFTs","setListedNFTs","fetchListedNFTs","address","contractabi","ethereum","window","provider","providers","Web3Provider","signer","getSigner","contractss","Contract","nftcontractaddress","listedTokens","marketplaceContract","getListedTokens","listedNFTsWithURIs","Promise","all","map","token","tokenURI","erc721Contract","tokenId","children","fileName","_jsxFileName","lineNumber","columnNumber","nft","src","alt","description","_c","$RefreshReg$"],"sources":["/home/neeraj/Documents/logistic/NFT_F/src/components/nft/ListonUI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from 'abi/ERC721Contract.json'\n\nfunction ListonUI() {\n  const [listedNFTs, setListedNFTs] = useState([]);\n\n  useEffect(() => {\n    fetchListedNFTs();\n  }, []);\n\n  const fetchListedNFTs = async () => {\n    const address = '0xd014b5697fCf686DF723069706c44ca8cC4718Cb';\nconst contractabi = abi.abi;\nconst { ethereum } = window;\nconst provider = new ethers.providers.Web3Provider(ethereum);\nconst signer = provider.getSigner();\nconst contractss = new ethers.Contract(address, contractabi,signer);\nconst nftcontractaddress=contractss.address;\n    // Call the getlistedtoken() function of the marketplace contract to get the array of listed NFTs\n    const listedTokens = await marketplaceContract.getListedTokens();\n\n    // Iterate through the listedTokens array and fetch the token URIs\n    const listedNFTsWithURIs = await Promise.all(\n      listedTokens.map(async (token) => {\n        const tokenURI = await erc721Contract.tokenURI(token.tokenId);\n        return { ...token, tokenURI };\n      })\n    );\n\n    setListedNFTs(listedNFTsWithURIs);\n  };\n\n  return (\n    <div>\n      <h1>Listed NFTs</h1>\n      {listedNFTs.map((nft) => (\n        <div key={nft.tokenId}>\n          <img src={nft.tokenURI} alt={`NFT ${nft.tokenId}`} />\n          <p>Description: {nft.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ListonUI;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdU,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,OAAO,GAAG,4CAA4C;IAChE,MAAMC,WAAW,GAAGT,GAAG,CAACA,GAAG;IAC3B,MAAM;MAAEU;IAAS,CAAC,GAAGC,MAAM;IAC3B,MAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAS,CAACC,YAAY,CAACJ,QAAQ,CAAC;IAC5D,MAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,MAAMC,UAAU,GAAG,IAAIlB,MAAM,CAACmB,QAAQ,CAACV,OAAO,EAAEC,WAAW,EAACM,MAAM,CAAC;IACnE,MAAMI,kBAAkB,GAACF,UAAU,CAACT,OAAO;IACvC;IACA,MAAMY,YAAY,GAAG,MAAMC,mBAAmB,CAACC,eAAe,CAAC,CAAC;;IAEhE;IACA,MAAMC,kBAAkB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC1CL,YAAY,CAACM,GAAG,CAAC,MAAOC,KAAK,IAAK;MAChC,MAAMC,QAAQ,GAAG,MAAMC,cAAc,CAACD,QAAQ,CAACD,KAAK,CAACG,OAAO,CAAC;MAC7D,OAAO;QAAE,GAAGH,KAAK;QAAEC;MAAS,CAAC;IAC/B,CAAC,CACH,CAAC;IAEDtB,aAAa,CAACiB,kBAAkB,CAAC;EACnC,CAAC;EAED,oBACErB,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB9B,UAAU,CAACqB,GAAG,CAAEU,GAAG,iBAClBlC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAKmC,GAAG,EAAED,GAAG,CAACR,QAAS;QAACU,GAAG,EAAG,OAAMF,GAAG,CAACN,OAAQ;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDjC,OAAA;QAAA6B,QAAA,GAAG,eAAa,EAACK,GAAG,CAACG,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAF7BC,GAAG,CAACN,OAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CAxCQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}