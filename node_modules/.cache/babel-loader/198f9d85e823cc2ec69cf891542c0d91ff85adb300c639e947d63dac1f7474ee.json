{"ast":null,"code":"var _jsxFileName = \"/home/neeraj/Documents/logistic/NFT_F/src/components/nft/ListonUI.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from 'abi/ERC721Contract.json';\nimport marketplaceabi from 'abi/marketplace.json';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListonUI() {\n  _s();\n  const [listedNFTs, setListedNFTs] = useState([]);\n  useEffect(() => {\n    fetchListedNFTs();\n  }, []);\n  const fetchListedNFTs = async () => {\n    const address = '0xd014b5697fCf686DF723069706c44ca8cC4718Cb';\n    const nftcontractabi = abi.abi;\n    const {\n      ethereum\n    } = window;\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const nftcontracts = new ethers.Contract(address, nftcontractabi, signer);\n    const marketplacecontractabi = marketplaceabi.abi;\n    const marketplaceaddress = '0xf46C0cc8f72E3200770dF2D63e62D9Ac50A6d090';\n    const marketplaceContract = new ethers.Contract(marketplaceaddress, marketplacecontractabi, signer);\n    // Call the getlistedtoken() function of the marketplace contract to get the array of listed NFTs\n    const listedTokens = await marketplaceContract.getListedTokens();\n    console.log(listedTokens, \"listed tokensssssssssss\");\n    // Iterate through the listedTokens array and fetch the token URIs\n    const listedNFTsWithURIs = await Promise.all(listedTokens.map(async token => {\n      const tokenURI = await nftcontracts.tokenURI(token.tokenId);\n      console.log(tokenURI, \"kkkkkk\");\n      return {\n        ...token,\n        tokenURI\n      };\n    }));\n    // console.log(listedNFTsWithURIs[0].tokenURI,\"listed NFT With URLs\");\n    setListedNFTs(listedNFTsWithURIs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-w-245 max-w-215 xs:max-w-none sm:w-full sm:min-w-155 minmd:min-w-245 minlg:min-w-327 dark:bg-nft-black-3 bg-white rounded-2xl p-4 m-4 minlg:m-8 sm:my-2 sm:mx-2 cursor-pointer shadow-md hover:shadow-lg duration-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-215 h-52 sm:h-36 minmd:h-60 minlg:h-300 rounded-2xl overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [listedNFTs.map(nft => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)), /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n          style: {\n            width: '300px'\n          },\n          className: \"flex object-fill justify-center w-full items-center minmd:min-w-190 hover:scale-110 transition-all duration-500\",\n          alt: \"no\",\n          placeholderSrc: \"img\",\n          src: \"https://cdn.pixabay.com/photo/2022/03/01/02/51/galaxy-7040416_1280.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 flex flex-col \",\n      style: {\n        color: 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-poppins dark:text-white text-nft-black-1 font-semibold text-sm minlg:text-xl\",\n        children: [\"Name: \", nft.tokenURI.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexBetween mt-1 minlg:mt-3 flex-row xs:flex-col xs:items-start xs:mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-poppins dark:text-white text-nft-black-1 font-semibold text-xs minlg:text-lg\",\n          children: [\"Price: \", data.price || 500, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"normal\",\n            children: \"ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-poppins dark:text-white text-nft-black-1 text-xs minlg:text-lg\",\n          children: [\"NFT Name : \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"normal\",\n            children: \" nft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n  // return (\n  //   <div>\n  //     <h1>Listed NFTs</h1>\n  //     {listedNFTs.map((nft) => (\n\n  //       <div key={nft.tokenId}>\n\n  //         <img src={`https://gateway.pinata.cloud/ipfs/Qmb4aNkjZ9XAkWwFndpBYWfdmHr5vRHYkNahH5R3fdQR2a`} alt={`NFT ${nft.tokenId}`} />\n  //         <p>Description: {nft.tokenURI}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n}\n_s(ListonUI, \"f8HLj3Gezol4xy0J/MkvSeLoqPs=\");\n_c = ListonUI;\nexport default ListonUI;\nvar _c;\n$RefreshReg$(_c, \"ListonUI\");","map":{"version":3,"names":["React","useEffect","useState","ethers","abi","marketplaceabi","LazyLoadImage","Fragment","_Fragment","jsxDEV","_jsxDEV","ListonUI","_s","listedNFTs","setListedNFTs","fetchListedNFTs","address","nftcontractabi","ethereum","window","provider","providers","Web3Provider","signer","getSigner","nftcontracts","Contract","marketplacecontractabi","marketplaceaddress","marketplaceContract","listedTokens","getListedTokens","console","log","listedNFTsWithURIs","Promise","all","map","token","tokenURI","tokenId","className","children","nft","style","width","alt","placeholderSrc","src","fileName","_jsxFileName","lineNumber","columnNumber","color","name","data","price","_c","$RefreshReg$"],"sources":["/home/neeraj/Documents/logistic/NFT_F/src/components/nft/ListonUI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from 'abi/ERC721Contract.json'\nimport marketplaceabi from 'abi/marketplace.json'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\n\nfunction ListonUI() {\n  const [listedNFTs, setListedNFTs] = useState([]);\n\n  useEffect(() => {\n    fetchListedNFTs();\n  }, []);\n\n  const fetchListedNFTs = async () => {\n    const address = '0xd014b5697fCf686DF723069706c44ca8cC4718Cb';\nconst nftcontractabi = abi.abi;\n\nconst { ethereum } = window;\nconst provider = new ethers.providers.Web3Provider(ethereum);\nconst signer = provider.getSigner();\n\nconst nftcontracts = new ethers.Contract(address, nftcontractabi,signer);\nconst marketplacecontractabi = marketplaceabi.abi;\nconst marketplaceaddress='0xf46C0cc8f72E3200770dF2D63e62D9Ac50A6d090';\nconst marketplaceContract=new ethers.Contract(marketplaceaddress, marketplacecontractabi,signer);\n    // Call the getlistedtoken() function of the marketplace contract to get the array of listed NFTs\nconst listedTokens = await marketplaceContract.getListedTokens();\nconsole.log(listedTokens,\"listed tokensssssssssss\");\n    // Iterate through the listedTokens array and fetch the token URIs\nconst listedNFTsWithURIs = await Promise.all(\n      listedTokens.map(async (token) => {\n        const tokenURI = await nftcontracts.tokenURI(token.tokenId);\n        console.log(tokenURI,\"kkkkkk\");\n        return { ...token, tokenURI };\n      })\n    );\n// console.log(listedNFTsWithURIs[0].tokenURI,\"listed NFT With URLs\");\n    setListedNFTs(listedNFTsWithURIs);\n  };\nreturn(\n\n    <div className=\"min-w-245 max-w-215 xs:max-w-none sm:w-full sm:min-w-155 minmd:min-w-245 minlg:min-w-327 dark:bg-nft-black-3 bg-white rounded-2xl p-4 m-4 minlg:m-8 sm:my-2 sm:mx-2 cursor-pointer shadow-md hover:shadow-lg duration-500\">\n      <div className=\"relative w-215 h-52 sm:h-36 minmd:h-60 minlg:h-300 rounded-2xl overflow-hidden\">\n        <>{listedNFTs.map((nft)=>(<></>))}\n          <LazyLoadImage\n            style={{ width: '300px'}}\n            className=\"flex object-fill justify-center w-full items-center minmd:min-w-190 hover:scale-110 transition-all duration-500\"\n            alt=\"no\"\n            placeholderSrc=\"img\"\n            src=\"https://cdn.pixabay.com/photo/2022/03/01/02/51/galaxy-7040416_1280.png\"\n          />\n        </>\n      </div>\n      <div className=\"mt-3 flex flex-col \" style={{ color: 'black' }}>\n        <p className=\"font-poppins dark:text-white text-nft-black-1 font-semibold text-sm minlg:text-xl\">\n          Name: {nft.tokenURI.name}\n        </p>\n        <div className=\"flexBetween mt-1 minlg:mt-3 flex-row xs:flex-col xs:items-start xs:mt-3\">\n          <p className=\"font-poppins dark:text-white text-nft-black-1 font-semibold text-xs minlg:text-lg\">\n            Price: {data.price || 500}\n            <span className=\"normal\">ETH</span>\n          </p>\n          <p className=\"font-poppins dark:text-white text-nft-black-1 text-xs minlg:text-lg\">\n            NFT Name : <span className=\"normal\"> nft</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  \n)\n  // return (\n  //   <div>\n  //     <h1>Listed NFTs</h1>\n  //     {listedNFTs.map((nft) => (\n        \n  //       <div key={nft.tokenId}>\n          \n  //         <img src={`https://gateway.pinata.cloud/ipfs/Qmb4aNkjZ9XAkWwFndpBYWfdmHr5vRHYkNahH5R3fdQR2a`} alt={`NFT ${nft.tokenId}`} />\n  //         <p>Description: {nft.tokenURI}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n}\n\nexport default ListonUI;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}