{"ast":null,"code":"var _jsxFileName = \"/home/neeraj/Documents/logistic/NFT_F/src/components/nft/NftLists.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Box, Grid, styled } from '@mui/material';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport NFTCard from './NftCard';\nimport abi from 'abi/ERC721Contract.json';\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardBody = styled(Box)(() => `\n  \n    margin: 30px 100px;\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    gap:2.5%;\n\n}\n  `);\nconst Body = styled(Card)(() => `\n  width:20%;\n  margin-bottom:2%;\n  cursor:pointer;\n  border: 1px solid;\n  box-shadow: 5px 4px #342929;\n  border-radius: 6%;\n\n\n}\n  `);\nfunction NftLists(props) {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [Page, setPage] = useState(4);\n  const {\n    testdata\n  } = props;\n  // console.log(testdata.length)\n\n  // useEffect(()=>{\n  //   const  apiData = async() => {\n  //     console.log(\"call\")\n  //    const response = await fetch(`https://api.instantwebtools.net/v1/passenger?page=${Page}&size=10`);\n  //     const jsonData = await response.json();\n  //     console.log(jsonData) \n  //     setData(jsonData.data)\n\n  //   };\n  //   apiData()\n  // },[])\n  const [nfts, setNFTs] = useState([]);\n  useEffect(() => {\n    const apiData = async () => {\n      const fetchNFTs = async Metamaskaddress => {\n        try {\n          const address = '0xd014b5697fCf686DF723069706c44ca8cC4718Cb';\n          const contractabi = abi.abi;\n          const {\n            ethereum\n          } = window;\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contractss = new ethers.Contract(address, contractabi, signer);\n          const tokenURIs = await contractss.getOwnedNFTs(Metamaskaddress);\n          setNFTs(tokenURIs);\n        } catch (error) {\n          console.error('Error fetching NFTs:', error);\n        }\n      };\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          await window.ethereum.enable();\n          const web3 = new Web3(window.ethereum);\n          const accounts = await web3.eth.getAccounts();\n          const address = accounts[0];\n          fetchNFTs(address);\n        } catch (error) {\n          console.error('Error connecting to Metamask:', error);\n        }\n      } else {\n        console.error('Metamask is not installed');\n      }\n    };\n    apiData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nfts.map((tokenURI, index) => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          src: tokenURI.image,\n          alt: `NFT ${tokenURI}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            children: \"NFT Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"NFT Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(NftLists, \"rMqRMXv+fxwCFHaT5wPkZEzeabs=\", false, function () {\n  return [useNavigate];\n});\n_c = NftLists;\n;\n// const  fetchMoreData = async() => {\n//     setPage(Page +1)\n//     const response = await fetch(`https://api.instantwebtools.net/v1/passenger?page=${Page}&size=10`);\n//     const jsonData = await response.json();\n//     setData(jsonData.data)\n//     setData(data.concat(jsonData.data))\n\n// };\n// return (\n//   <>\n//    <InfiniteScroll\n//         dataLength={data?.length}\n//         next={fetchMoreData}\n//         hasMore={true}\n//         loader={<h4>Loading...</h4>}\n//       >\n\n//   {console.log(\"data\",data)}\n//     <CardBody>\n//       {data?.map((d) => {\n//         return (\n//           <>\n\n//             <Body >\n//             <Link to=\"/details\" state={{ d: d }}>\n//              <NFTCard data={d}/>\n//               </Link>\n//             </Body>\n\n//           </>\n//         )\n//       })}\n//     </CardBody>\n\n//     </InfiniteScroll>\n//   </>\n// )\n//}\n\nexport default NftLists;\nvar _c;\n$RefreshReg$(_c, \"NftLists\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardActions","CardContent","CardMedia","Button","Typography","Box","Grid","styled","Link","useNavigate","InfiniteScroll","NFTCard","abi","ethers","Web3","jsxDEV","_jsxDEV","CardBody","Body","NftLists","props","_s","navigate","data","setData","Page","setPage","testdata","nfts","setNFTs","apiData","fetchNFTs","Metamaskaddress","address","contractabi","ethereum","window","provider","providers","Web3Provider","signer","getSigner","contractss","Contract","tokenURIs","getOwnedNFTs","error","console","enable","web3","accounts","eth","getAccounts","children","map","tokenURI","index","component","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","_c","$RefreshReg$"],"sources":["/home/neeraj/Documents/logistic/NFT_F/src/components/nft/NftLists.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport Card from '@mui/material/Card'\nimport CardActions from '@mui/material/CardActions'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport { Box, Grid, styled } from '@mui/material'\nimport { Link, useNavigate } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport NFTCard from './NftCard'\nimport abi from 'abi/ERC721Contract.json'\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nconst CardBody = styled(Box)(\n  () => `\n  \n    margin: 30px 100px;\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    gap:2.5%;\n\n}\n  `,\n)\n\nconst Body = styled(Card)(\n  () => `\n  width:20%;\n  margin-bottom:2%;\n  cursor:pointer;\n  border: 1px solid;\n  box-shadow: 5px 4px #342929;\n  border-radius: 6%;\n\n\n}\n  `,\n)\n\nfunction NftLists(props) {\n  const navigate = useNavigate();\n  const [data,setData]=useState([])\n  const [Page,setPage]=useState(4)\n\n\n\n  const { testdata } = props\n  // console.log(testdata.length)\n\n  // useEffect(()=>{\n  //   const  apiData = async() => {\n  //     console.log(\"call\")\n  //    const response = await fetch(`https://api.instantwebtools.net/v1/passenger?page=${Page}&size=10`);\n  //     const jsonData = await response.json();\n  //     console.log(jsonData) \n  //     setData(jsonData.data)\n\n  //   };\n  //   apiData()\n  // },[])\n  const [nfts, setNFTs] = useState([]);\n  useEffect(()=>{\n    const  apiData = async() => {\n      const fetchNFTs = async (Metamaskaddress) => {\n        try {\n          const address = '0xd014b5697fCf686DF723069706c44ca8cC4718Cb';\n          const contractabi = abi.abi;\n          const { ethereum } = window;\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contractss = new ethers.Contract(address, contractabi,signer);\n          const tokenURIs = await contractss.getOwnedNFTs(Metamaskaddress );\n          setNFTs(tokenURIs);\n        } catch (error) {\n          console.error('Error fetching NFTs:', error);\n        }\n      };\n\n\n      if (typeof window.ethereum !== 'undefined') {\n              try {\n                await window.ethereum.enable();\n                const web3 = new Web3(window.ethereum);\n                const accounts = await web3.eth.getAccounts();\n                const address = accounts[0];\n                fetchNFTs(address);\n              } catch (error) {\n                console.error('Error connecting to Metamask:', error);\n              }\n            } else {\n              console.error('Metamask is not installed');\n            }\n\n           \n    };\n    apiData()\n  },[])\n  return (\n    <div>\n      {/* <button onClick={connectToMetamask}>Connect to Metamask</button> */}\n       <div>\n        {\n        nfts.map((tokenURI, index) => (\n          <Card key={index}>\n            {/* Display NFT image */}\n            <CardMedia component=\"img\" src={tokenURI.image} alt={`NFT ${tokenURI}`} />\n{/* {console.log(tokenURI.image)} */}\n            <CardContent>\n              {/* Display NFT details */}\n              <Typography variant=\"h5\" component=\"div\">\n                NFT Title\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n              NFT Description\n              </Typography>\n            </CardContent>\n          </Card>\n        ))\n        }\n        \n      </div> \n    </div>\n  );\n};\n  // const  fetchMoreData = async() => {\n  //     setPage(Page +1)\n  //     const response = await fetch(`https://api.instantwebtools.net/v1/passenger?page=${Page}&size=10`);\n  //     const jsonData = await response.json();\n  //     setData(jsonData.data)\n  //     setData(data.concat(jsonData.data))\n   \n  // };\n  // return (\n  //   <>\n  //    <InfiniteScroll\n  //         dataLength={data?.length}\n  //         next={fetchMoreData}\n  //         hasMore={true}\n  //         loader={<h4>Loading...</h4>}\n  //       >\n  \n  //   {console.log(\"data\",data)}\n  //     <CardBody>\n  //       {data?.map((d) => {\n  //         return (\n  //           <>\n            \n  //             <Body >\n  //             <Link to=\"/details\" state={{ d: d }}>\n  //              <NFTCard data={d}/>\n  //               </Link>\n  //             </Body>\n          \n            \n  //           </>\n  //         )\n  //       })}\n  //     </CardBody>\n\n  //     </InfiniteScroll>\n  //   </>\n  // )\n//}\n\nexport default NftLists\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}