{"ast":null,"code":"/* eslint-disable no-unused-vars */import{Contract}from\"@ethersproject/contracts\";import{isMetaMaskInstalled}from\"utils\";import NFT from\"abi/NftMarketPlace.json\";import Web3 from\"web3\";import{RPC_URLS}from\"constant\";var getContract=function getContract(abi,contractAddress){if(isMetaMaskInstalled()){return new Contract(contractAddress,abi);}return;};export var getWeb3Contract=function getWeb3Contract(chainId,abi,contractAddress){var web3;if(isMetaMaskInstalled()){web3=new Web3(window.ethereum);}else{web3=new Web3(new Web3.providers.HttpProvider(RPC_URLS===null||RPC_URLS===void 0?void 0:RPC_URLS[chainId]));}return new web3.eth.Contract(abi,contractAddress);};export var web3NftContract=function web3NftContract(_ref){var address=_ref.address,chainId=_ref.chainId;if(!address){return null;}return getWeb3Contract(chainId,NFT,address);};","map":{"version":3,"names":["Contract","isMetaMaskInstalled","NFT","Web3","RPC_URLS","getContract","abi","contractAddress","getWeb3Contract","chainId","web3","window","ethereum","providers","HttpProvider","eth","web3NftContract","_ref","address"],"sources":["/home/neeraj/Documents/logistic/NFT_F/src/contract/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { isMetaMaskInstalled } from \"utils\";\nimport NFT from \"abi/NftMarketPlace.json\"\nimport Web3 from \"web3\";\nimport { RPC_URLS } from \"constant\";\n\n\n\n\n\nconst getContract =(abi,contractAddress)=>{\n    if (isMetaMaskInstalled()) {\n\t\treturn new Contract(contractAddress, abi);\n\t}\n\treturn;\n}\n\nexport const getWeb3Contract = (chainId, abi, contractAddress) => {\n\tlet web3;\n\tif (isMetaMaskInstalled()) {\n\t\tweb3 = new Web3(window.ethereum);\n\t} else {\n\t\tweb3 = new Web3(new Web3.providers.HttpProvider(RPC_URLS?.[chainId]));\n\t}\n\n\treturn new web3.eth.Contract(abi, contractAddress);\n};\n\n\n\nexport const web3NftContract = ({ address, chainId }) => {\n\tif (!address) {\n\t\treturn null;\n\t}\n\n\treturn getWeb3Contract(chainId, NFT, address);\n};"],"mappings":"AAAA,mCACA,OAASA,QAAQ,KAAQ,0BAA0B,CACnD,OAASC,mBAAmB,KAAQ,OAAO,CAC3C,MAAO,CAAAC,GAAG,KAAM,yBAAyB,CACzC,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,OAASC,QAAQ,KAAQ,UAAU,CAMnC,GAAM,CAAAC,WAAW,CAAE,QAAb,CAAAA,WAAWA,CAAGC,GAAG,CAACC,eAAe,CAAG,CACtC,GAAIN,mBAAmB,CAAC,CAAC,CAAE,CAC7B,MAAO,IAAI,CAAAD,QAAQ,CAACO,eAAe,CAAED,GAAG,CAAC,CAC1C,CACA,OACD,CAAC,CAED,MAAO,IAAM,CAAAE,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,OAAO,CAAEH,GAAG,CAAEC,eAAe,CAAK,CACjE,GAAI,CAAAG,IAAI,CACR,GAAIT,mBAAmB,CAAC,CAAC,CAAE,CAC1BS,IAAI,CAAG,GAAI,CAAAP,IAAI,CAACQ,MAAM,CAACC,QAAQ,CAAC,CACjC,CAAC,IAAM,CACNF,IAAI,CAAG,GAAI,CAAAP,IAAI,CAAC,GAAI,CAAAA,IAAI,CAACU,SAAS,CAACC,YAAY,CAACV,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAGK,OAAO,CAAC,CAAC,CAAC,CACtE,CAEA,MAAO,IAAI,CAAAC,IAAI,CAACK,GAAG,CAACf,QAAQ,CAACM,GAAG,CAAEC,eAAe,CAAC,CACnD,CAAC,CAID,MAAO,IAAM,CAAAS,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAAC,IAAA,CAA6B,IAAvB,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAAET,OAAO,CAAAQ,IAAA,CAAPR,OAAO,CACjD,GAAI,CAACS,OAAO,CAAE,CACb,MAAO,KAAI,CACZ,CAEA,MAAO,CAAAV,eAAe,CAACC,OAAO,CAAEP,GAAG,CAAEgB,OAAO,CAAC,CAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}