{"ast":null,"code":"import { getAddress } from \"@ethersproject/address\";\nimport BigNumber from \"bignumber.js\";\nBigNumber.config({\n  EXPONENTIAL_AT: 1e9\n});\nexport const isMetaMaskInstalled = () => {\n  return typeof window.web3 !== \"undefined\";\n};\nexport const toWei = function (amount) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  try {\n    if (!amount) {\n      return new BigNumber(0).toString();\n    }\n    return new BigNumber(amount).multipliedBy(new BigNumber(10).exponentiatedBy(decimals)).toFixed(0).toString();\n  } catch (error) {\n    console.log(\"exeption in toWei , \", error);\n    return null;\n  }\n};\nexport const fromWei = function (amount) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  console.log(\"amount\", amount);\n  try {\n    if (!amount) {\n      return new BigNumber(0).toString();\n    }\n    return new BigNumber(amount).div(new BigNumber(10).exponentiatedBy(decimals)).toString();\n  } catch (error) {\n    console.log(\"exeption in fromWei \", error);\n    return null;\n  }\n};\nexport const isNumber = value => {\n  return !isNaN(parseInt(value));\n};\nexport function isAddress(value) {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\nexport const imageWithAndHeight = providedFile => {\n  const imageDimentions = {\n    width: null,\n    height: null\n  };\n  return new Promise(resolve => {\n    const reader = new FileReader();\n    reader.readAsDataURL(providedFile);\n    reader.onload = function () {\n      const img = new Image();\n      img.src = reader.result;\n      img.onload = function () {\n        imageDimentions.width = img.width;\n        imageDimentions.height = img.height;\n        resolve(imageDimentions);\n      };\n    };\n  });\n};","map":{"version":3,"names":["getAddress","BigNumber","config","EXPONENTIAL_AT","isMetaMaskInstalled","window","web3","toWei","amount","decimals","arguments","length","undefined","toString","multipliedBy","exponentiatedBy","toFixed","error","console","log","fromWei","div","isNumber","value","isNaN","parseInt","isAddress","imageWithAndHeight","providedFile","imageDimentions","width","height","Promise","resolve","reader","FileReader","readAsDataURL","onload","img","Image","src","result"],"sources":["/home/neeraj/Documents/logistic/NFT_F/src/utils/index.js"],"sourcesContent":["import { getAddress } from \"@ethersproject/address\";\nimport BigNumber from \"bignumber.js\";\n\nBigNumber.config({ EXPONENTIAL_AT: 1e9 });\n\nexport const isMetaMaskInstalled = () => {\n\treturn typeof window.web3 !== \"undefined\";\n};\n\n\nexport const toWei = (amount, decimals = 18) => {\n\ttry {\n\t\tif (!amount) {\n\t\t\treturn new BigNumber(0).toString();\n\t\t}\n\t\treturn new BigNumber(amount)\n\t\t\t.multipliedBy(new BigNumber(10).exponentiatedBy(decimals))\n\t\t\t.toFixed(0)\n\t\t\t.toString();\n\t} catch (error) {\n\t\tconsole.log(\"exeption in toWei , \", error);\n\t\treturn null;\n\t}\n};\n\nexport const fromWei = (amount, decimals = 18) => {\n\tconsole.log(\"amount\", amount);\n\ttry {\n\t\tif (!amount) {\n\t\t\treturn new BigNumber(0).toString();\n\t\t}\n\n\t\treturn new BigNumber(amount)\n\t\t\t.div(new BigNumber(10).exponentiatedBy(decimals))\n\t\t\t.toString();\n\t} catch (error) {\n\t\tconsole.log(\"exeption in fromWei \", error);\n\t\treturn null;\n\t}\n};\n\n\nexport const isNumber = (value) => {\n\treturn !isNaN(parseInt(value));\n};\n\nexport function isAddress(value) {\n\ttry {\n\t\treturn getAddress(value);\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport const imageWithAndHeight = (providedFile) => {\n\tconst imageDimentions = { width: null, height: null };\n\treturn new Promise((resolve) => {\n\t\tconst reader = new FileReader();\n\n\t\treader.readAsDataURL(providedFile);\n\t\treader.onload = function () {\n\t\t\tconst img = new Image();\n\t\t\timg.src = reader.result;\n\t\t\timg.onload = function () {\n\t\t\t\timageDimentions.width = img.width;\n\t\t\t\timageDimentions.height = img.height;\n\n\t\t\t\tresolve(imageDimentions);\n\t\t\t};\n\t\t};\n\t});\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}