{"version":3,"file":"static/js/234.1dedb0d3.chunk.js","mappings":"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","sources":["components/nft/NftDetails.js","web3config/web3config.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Container,\n  styled,\n  Typography,\n} from '@mui/material'\nimport Grid from '@mui/material/Grid'\nimport React from 'react'\nimport { Link, useLocation, useParams } from 'react-router-dom'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport abi from 'abi/marketplace.json'\nimport { ethers } from 'ethers';\nimport { marketplaceContract} from 'web3config/web3config';\nconst DatailsBody = styled(Box)(\n  () => `\n  \n    margin: 3% 10%;\n}\n  `,\n)\nconst ImagBody = styled(Box)(\n  () => `\n  \n    display: flex;\n    justify-content: flex-start;\n}\n  `,\n)\n\nconst BackBtn = styled(Box)(\n  () => `\n   margin: 3% 10%;\n    display: flex;\n    justify-content: flex-start;\n    cursor:pointer\n   \n}\n  `,\n)\n\nfunction NftDetails() {\n  const location = useLocation()\n  const data = location.state.d\n  const tokenId= parseInt(data.tokenId._hex)\n  \nasync function handleBuy() {\n  try {\n    console.log(tokenId,\"tokenid\");\n    await marketplaceContract.buy(tokenId,{value:0.0001});\n    \n  } catch (error) {\n    console.error('Error buying NFTs:', error);\n  }\n   return (\n     <div>{console.log(\"buy button call\")}</div>\n   )\n }\n \n return (\n    <>\n      <div className=\"gamfi-breadcrumbs-section\">\n        <div className=\"container\">\n          <div className=\"apply-heading text-center\">\n            <h2 className=\"mb-0\">Owned by : -  {data.name}</h2>\n          </div>\n        </div>\n      </div>\n      \n      <Link to=\"/\">\n      <BackBtn><ArrowBackIcon/>  Back</BackBtn>\n      </Link>\n\n      <DatailsBody>\n        <Grid container spacing={2}>\n          <Grid item xs={2} md={6}>\n            <div>\n              \n              <ImagBody>\n                <img\n                  src={`https://ipfs.io/ipfs/Qmb4aNkjZ9XAkWwFndpBYWfdmHr5vRHYkNahH5R3fdQR2a`}\n                  width=\"70%\"\n                />\n              </ImagBody>\n            </div>\n          </Grid>\n          <Grid item xs={10} md={6}>\n            <Card sx={{ width: '100%' }}>\n              <CardContent>\n\n                <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"div\"\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                  <div>\n                    Owned by <b>{data.name}</b>\n                  </div>\n                  <div>\n                    Current Price <b>{data.price} ETH</b>\n                  </div>\n                </Typography>\n                    \n              <Typography  style={{color:\"black\"}}>NFT Name : - <b>{data.itemname}</b></Typography>\n                   \n                <Typography>\n                  <div>\n                    <Grid item xs={4} sx={{ mt: 5 }}>\n                    <Typography variant=\"h5\" component=\"h5\" style={{color:\"black\"}}>Description : -</Typography>\n                    </Grid>\n                    <Grid item xs={11}>\n                      <p>\n                        Column widths are integer values between 1 and 12; they\n                        apply at any breakpoint and indicate how many columns\n                        are occupied by the component. A value given to a\n                        breakpoint applies to all the other breakpoints wider\n                        than it (unless overridden, as you can read later in\n                        this page). For example, xs={12} sizes a component to\n                        occupy the whole viewport width regardless of its size.\n                      </p>\n                    </Grid>\n                  </div>\n                </Typography>\n              \n                <Box>\n                <Typography variant=\"h5\" component=\"h5\" style={{color:\"black\",marginBottom:10}}>Details : -</Typography>\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} md={4}>\n                        <span>Contract Address:</span>\n                      </Grid>\n                      <Grid item xs={6} md={8}>\n                        <span>0xb6a37b5d14d502c3ab0ae6f3a0e058bc9517786e</span>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} md={4}>\n                        <span>Token Standard:</span>\n                      </Grid>\n                      <Grid item xs={6} md={8}>\n                        <span>ERC721</span>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} md={4}>\n                        <span>Chain:</span>\n                      </Grid>\n                      <Grid item xs={6} md={8}>\n                        <span>Etherium</span>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                  <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} md={4}>\n                        <span>Token ID:</span>\n                      </Grid>\n                      <Grid item xs={6} md={8}>\n                        <span>198</span>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Box>\n              </CardContent>\n              <CardActions>\n                <Button sx={{ background: '#121212' }} variant=\"contained\" onClick={handleBuy}>\n                  Buy\n                </Button>\n                <Button sx={{ background: '#121212' }} variant=\"contained\">\n                  Place Bid \n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </DatailsBody>\n    </>\n  )\n}\n\nexport default NftDetails\n","// web3Config.js\nimport abi from 'abi/ERC721Contract.json'\nimport { ethers } from 'ethers';\nimport React, { useState ,useEffect} from 'react';\nimport marketplaceabi from 'abi/marketplace.json'\n// Initialize your web3 connection\nconst marketplaceaddress='0xBA01432F68fcA69a27159178760A96b447F8Ec1F';\nconst nftcontractaddress = '0x58D1013a33e27D71B9Edb6C832eC839A0d44d395';\nconst contractabi = abi.abi;\nconst { ethereum } = window;\nconst provider = new ethers.providers.Web3Provider(ethereum);\nconst signer = provider.getSigner();\nconst nftcontract = new ethers.Contract(nftcontractaddress, contractabi,signer);\nconst marketplacecontractabi = marketplaceabi.abi;\nconst marketplaceContract=new ethers.Contract(marketplaceaddress, marketplacecontractabi,signer);\n\nexport { nftcontract, marketplaceContract,marketplaceaddress ,nftcontractaddress};\n"],"names":["DatailsBody","styled","Box","ImagBody","BackBtn","data","useLocation","state","d","tokenId","parseInt","_hex","_handleBuy","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","marketplaceContract","buy","value","t0","error","abrupt","_jsx","children","stop","apply","arguments","_jsxs","_Fragment","className","name","Link","to","ArrowBackIcon","Grid","container","spacing","item","xs","md","src","width","Card","sx","CardContent","Typography","gutterBottom","variant","component","style","display","justifyContent","price","color","itemname","mt","marginBottom","flexGrow","CardActions","Button","background","onClick","marketplaceaddress","nftcontractaddress","contractabi","abi","ethereum","window","signer","ethers","getSigner","nftcontract","marketplacecontractabi","marketplaceabi"],"sourceRoot":""}